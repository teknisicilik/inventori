<?php
 namespace App\Services\Crud; use App\CoreService\CoreException; use App\CoreService\CoreService; use Illuminate\Support\Facades\Auth; use Illuminate\Support\Facades\DB; use Illuminate\Support\Facades\URL; use Illuminate\Support\Str; class Dataset extends CoreService { public $transaction = false; public $task = null; public function prepare($input) { $model = str_replace("\x5f", "\x2d", $input["\155\x6f\144\x65\x6c"]); $classModel = "\134\x41\x70\x70\134\x4d\157\x64\x65\154\163\x5c" . Str::ucfirst(Str::camel($model)); $permission = "\154\x6f\157\x6b\x75\x70\55" . $model; $authRoles = getRoleName(Auth::user()->role_id); if (!class_exists($classModel)) { throw new CoreException(__("\155\x65\x73\x73\x61\147\145\56\155\157\x64\x65\x6c\x34\x30\x34", array("\x6d\157\144\x65\154" => $model)), 404); } if (!$classModel::IS_LIST) { throw new CoreException(__("\155\x65\163\x73\141\147\x65\56\x34\x30\64"), 404); } if (!hasPermission($permission)) { throw new CoreException(__("\x6d\145\163\x73\141\x67\145\56\x66\157\x72\x62\151\144\144\145\156\64\x30\x33", array("\160\x65\162\x6d\151\x73\163\x69\157\x6e" => $permission, "\x72\157\x6c\145" => $authRoles)), 403); } $input["\143\x6c\x61\163\x73\137\155\157\x64\x65\154"] = $classModel; return $input; } public function process($input, $originalInput) { $classModel = $input["\x63\x6c\x61\163\x73\x5f\155\x6f\x64\x65\x6c"]; $selectableList = array(); $sortBy = $classModel::TABLE . "\x2e\151\x64"; $sort = strtoupper($input["\163\157\162\164"] ?? "\x44\x45\x53\103") == "\x41\x53\x43" ? "\x41\123\103" : "\x44\x45\123\103"; $sortableList = $classModel::FIELD_SORTABLE; if (in_array($input["\x73\157\162\164\x5f\142\x79"] ?? '', $sortableList)) { $sortBy = $input["\x73\157\x72\x74\137\x62\171"]; } $searchableList = $classModel::FIELD_SEARCHABLE; $tableJoinList = array(); $filterList = array(); $params = array(); foreach ($classModel::FIELD_LIST as $list) { $selectableList[] = $classModel::TABLE . "\x2e" . $list; } foreach ($classModel::FIELD_FILTERABLE as $filter => $operator) { if (!is_blank($input, $filter)) { $cekTypeInput = json_decode($input[$filter], true); if (!is_array($cekTypeInput)) { $filterList[] = "\40\x41\116\x44\40" . $classModel::TABLE . "\56" . $filter . "\x20" . $operator["\x6f\160\145\x72\x61\164\157\x72"] . "\40\x3a{$filter}"; $params[$filter] = $input[$filter]; } else { $input[$filter] = json_decode($input[$filter], true); if ($input[$filter]["\157\160\x65\x72\141\x74\157\x72"] == "\x62\x65\164\x77\145\145\x6e") { $filterList[] = "\x20\101\116\x44\x20" . $classModel::TABLE . "\x2e" . $filter . "\x20" . $input[$filter]["\157\160\145\x72\141\164\x6f\162"] . "\40\x27" . $input[$filter]["\166\141\154\165\145"][0] . "\x27\40\101\x4e\x44\x20\x27" . $input[$filter]["\x76\141\154\x75\145"][1] . "\x27"; } else { $filterList[] = "\40\101\116\104\x20" . $classModel::TABLE . "\x2e" . $filter . "\40" . $input[$filter]["\157\160\145\x72\141\164\x6f\162"] . "\x20\72{$filter}"; $params[$filter] = $input[$filter]; } } } } $i = 0; foreach ($classModel::FIELD_RELATION as $key => $relation) { $alias = $relation["\x61\x6c\x69\x61\163\x54\x61\142\x6c\145"]; $fieldDisplayed = "\x43\117\116\103\x41\x54\x5f\127\123\x20\50\x27\x20\55\40\x27\54"; foreach ($relation["\x73\145\154\x65\143\x74\x46\151\x65\x6c\x64\x73"] as $keyField) { $fieldDisplayed .= $alias . "\x2e" . $keyField . "\54"; } $fieldDisplayed = substr($fieldDisplayed, 0, strlen($fieldDisplayed) - 1); $fieldDisplayed .= "\51\x20\x41\x53\x20" . $relation["\144\151\x73\160\x6c\x61\x79\x4e\141\155\x65"]; $selectableList[] = $fieldDisplayed; $tableJoinList[] = "\x4c\x45\x46\124\x20\x4a\x4f\111\x4e\x20" . $relation["\154\151\x6e\153\x54\141\x62\x6c\x65"] . "\40" . $alias . "\x20\117\116\x20" . $classModel::TABLE . "\56" . $key . "\40\x3d\x20" . $alias . "\x2e" . $relation["\154\x69\x6e\153\106\151\145\x6c\144"]; $i++; } if (!empty($classModel::CUSTOM_SELECT)) { $selectableList[] = $classModel::CUSTOM_SELECT; } $condition = "\40\127\110\x45\x52\x45\40\164\162\x75\x65\x20"; if (!is_blank($input, "\163\x65\x61\x72\x63\150")) { $searchableList = array_map(function ($item) use($classModel) { if (in_array($item, $classModel::FIELD_SEARCHABLE)) { return $classModel::TABLE . "\56" . $item . "\x20\111\114\111\x4b\105\x20\72\x73\x65\x61\x72\x63\x68"; } else { return $item . "\40\x49\114\111\113\105\40\72\x73\145\x61\x72\x63\x68"; } }, $searchableList); } else { $searchableList = array(); } if (count($searchableList) > 0 && !is_blank($input, "\163\x65\141\x72\143\150")) { $params["\x73\145\x61\162\x63\150"] = "\x25" . strtoupper($input["\x73\x65\141\162\x63\x68"] ?? '') . "\x25"; } if (isset($input["\x6c\151\x6d\x69\x74"])) { if ($input["\154\151\155\151\164"] == "\156\x75\x6c\154") { $limit = "\x6e\165\x6c\154"; } else { $limit = $input["\154\x69\x6d\x69\x74"]; } } else { $limit = "\156\x75\x6c\154"; } $offset = $input["\x6f\x66\146\163\x65\x74"] ?? 0; if (!is_null($input["\160\x61\x67\145"] ?? null)) { if ($limit == "\156\x75\154\154") { $offset = "\156\x75\x6c\x6c"; } else { $offset = $limit * ($input["\x70\141\147\145"] - 1); } } $userId = Auth::user()->id; $roleId = Auth::user()->role_id; $userRoleGroupData = DB::selectOne("\123\x45\114\x45\103\124\x20\102\56\x72\x6f\154\145\137\x6e\141\155\x65\54\x20\103\56\151\x64\x20\106\x52\117\115\40\x75\x73\x65\x72\x73\40\x41\40\xa\40\40\40\x20\x20\x20\40\40\112\x4f\111\x4e\40\162\157\x6c\145\163\40\x42\x20\x4f\x4e\40\101\56\x72\157\154\x65\137\151\x64\40\x3d\40\x42\56\x69\x64\xa\x20\40\x20\x20\40\x20\40\x20\x4a\117\x49\116\40\x72\x6f\x6c\145\x5f\x67\x72\157\x75\160\163\x20\103\40\117\x4e\x20\102\56\x72\x6f\x6c\145\x5f\147\x72\x6f\x75\x70\x5f\x69\x64\40\x3d\40\103\56\151\144\12\40\x20\x20\40\40\x20\40\40\127\x48\105\122\x45\x20\x41\56\151\x64\40\75\x20\72\165\x73\145\x72\137\151\x64", array("\x75\163\145\x72\137\151\144" => $userId)); $roleGroupId = 0; if (!is_null($userRoleGroupData)) { $roleGroupId = $userRoleGroupData->id; } if ($roleGroupId >= 30 and $classModel::TABLE == "\x64\x69\166\x69\163\x69\x6f\x6e\163") { $tableJoinList[] = "\x4a\x4f\111\x4e\40\x6d\x61\160\x70\x69\156\147\137\x75\x73\x65\162\163\137\144\151\166\x69\163\151\157\x6e\x73\x20\115\x55\104\40\x4f\x4e\40" . $classModel::TABLE . "\56\x69\144\x20\75\x20\115\125\x44\56\144\151\x76\x69\x73\x69\157\x6e\137\x69\144"; $condition .= "\40\x41\116\104\40\x4d\125\104\x2e\x75\163\x65\162\137\x69\144\40\75\x20" . $userId . "\x20\x41\x4e\104\40\115\125\104\56\141\143\164\151\166\x65\x20\x3d\x20\x31"; } if ($roleGroupId >= 30 and in_array("\144\151\x76\x69\x73\151\x6f\x6e\137\x69\144", $classModel::FIELD_LIST)) { $tableJoinList[] = "\x4a\x4f\x49\x4e\x20\155\x61\160\x70\x69\156\x67\137\165\x73\x65\162\163\137\144\151\x76\151\x73\x69\157\156\x73\x20\115\125\104\x20\117\116\x20" . $classModel::TABLE . "\56\x64\151\x76\151\163\x69\157\x6e\137\x69\x64\x20\75\x20\x4d\125\x44\56\x64\151\166\x69\x73\x69\157\156\137\x69\x64"; $condition .= "\40\x41\x4e\x44\40\115\x55\104\x2e\x75\x73\x65\x72\137\x69\144\40\x3d\x20" . $userId . "\x20\x41\116\x44\x20\115\125\104\x2e\141\x63\164\151\x76\145\x20\x3d\40\x31"; } $sql = "\123\x45\x4c\105\x43\x54\x20" . implode("\54\x20", $selectableList) . "\40\106\122\117\115\40" . $classModel::TABLE . "\40" . implode("\40", $tableJoinList) . $condition . (count($searchableList) > 0 ? "\40\x41\x4e\104\x20\50" . implode("\x20\x4f\x52\40", $searchableList) . "\x29" : '') . implode("\12", $filterList) . "\40\117\122\x44\x45\122\40\x42\x59\40" . $sortBy . "\x20" . $sort . "\40\114\x49\x4d\111\x54\x20{$limit}\40\117\x46\106\x53\105\124\40{$offset}\40"; $sqlForCount = "\123\105\x4c\105\x43\x54\40\x43\x4f\125\x4e\x54\x28\x31\51\x20\101\x53\40\x74\157\164\x61\x6c\x20\106\122\117\115\x20" . $classModel::TABLE . "\x20" . implode("\x20", $tableJoinList) . $condition . (count($searchableList) > 0 ? "\x20\x41\116\104\x20\x28" . implode("\40\x4f\122\40", $searchableList) . "\51" : '') . implode("\xa", $filterList); $productList = DB::select($sql, $params); $fieldCasting = $classModel::FIELD_CASTING; array_map(function ($key) use($classModel, $fieldCasting) { foreach ($key as $field => $value) { if (isset($fieldCasting[$field])) { if (array_key_exists($field, $fieldCasting)) { if ($fieldCasting[$field] == "\x66\x6c\x6f\x61\x74") { $key->{$field} = (double) $key->{$field}; } } } if ((preg_match("\57\x66\x69\x6c\x65\x5f\57\151", $field) or preg_match("\57\x69\x6d\147\137\x2f\151", $field)) and !is_null($key->{$field})) { $url = URL::to("\141\160\151\57\x66\151\x6c\x65\57" . $classModel::TABLE . "\x2f" . $field . "\x2f" . $key->id . "\x2f" . time()); $tumbnailUrl = URL::to("\141\160\151\x2f\x74\165\155\x62\55\x66\x69\x6c\x65\x2f" . $classModel::TABLE . "\57" . $field . "\57" . $key->id . "\57" . time()); $ext = pathinfo($key->{$field}, PATHINFO_EXTENSION); $filename = pathinfo(storage_path($key->{$field}), PATHINFO_BASENAME); $key->{$field} = (object) array("\145\x78\164" => is_null($key->{$field}) ? null : $ext, "\x75\x72\x6c" => $url, "\x74\x75\155\142\x6e\141\x69\x6c\137\x75\162\154" => $tumbnailUrl, "\146\x69\x6c\145\x6e\x61\x6d\x65" => is_null($key->{$field}) ? null : $filename, "\x66\x69\145\154\144\137\x76\141\154\165\x65" => $key->{$field}); } } return $key; }, $productList); $total = DB::selectOne($sqlForCount, $params)->total; if ($limit == "\x6e\165\154\x6c") { $totalPage = 1; } else { $totalPage = ceil($total / $limit); } return array("\x64\x61\164\141" => $productList, "\164\157\x74\141\154" => $total, "\164\157\164\x61\x6c\120\141\147\145" => $totalPage); } protected function validation() { return array(); } }