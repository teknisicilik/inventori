<?php
 namespace App\Services\Crud; use App\CoreService\CoreException; use App\CoreService\CoreService; use Illuminate\Support\Facades\Auth; use Illuminate\Support\Facades\DB; use Illuminate\Support\Facades\URL; use Illuminate\Support\Str; use Illuminate\Support\Carbon; use Illuminate\Support\Facades\Log; class Get extends CoreService { public $transaction = false; public $task = null; public function prepare($input) { $model = str_replace("\137", "\x2d", $input["\x6d\x6f\144\x65\154"]); $classModel = "\134\101\160\160\134\115\x6f\x64\145\x6c\163\x5c" . Str::ucfirst(Str::camel($model)); $permission = "\x76\151\x65\167\x2d" . $model; if (!class_exists($classModel)) { throw new CoreException(__("\155\145\163\163\141\x67\145\56\155\157\x64\x65\154\x34\60\x34", array("\x6d\157\x64\145\154" => $model)), 404); } if (!$classModel::IS_LIST) { throw new CoreException(__("\x6d\145\x73\x73\141\147\145\56\64\60\64"), 404); } if (!hasPermission($permission)) { throw new CoreException(__("\x6d\x65\x73\163\x61\147\x65\x2e\x66\x6f\162\142\x69\x64\144\145\156\x34\60\63", array("\160\x65\162\x6d\151\x73\163\151\157\156" => $permission)), 403); } $input["\143\x6c\x61\x73\x73\137\x6d\157\x64\145\154\137\x6e\x61\155\x65"] = $model; $input["\143\154\141\163\163\137\x6d\x6f\x64\x65\x6c"] = $classModel; return $input; } public function process($input, $originalInput) { $classModelName = $input["\143\x6c\x61\163\x73\137\x6d\157\144\x65\x6c\137\x6e\x61\x6d\x65"]; $classModel = $input["\143\x6c\x61\x73\163\x5f\155\157\144\x65\154"]; $selectableList = array(); $sortBy = $classModel::TABLE . "\56\151\144"; $sort = strtoupper($input["\x73\x6f\162\164"] ?? "\104\105\x53\103") == "\x41\x53\103" ? "\x41\123\x43" : "\104\x45\123\103"; $sortableList = $classModel::FIELD_SORTABLE; if (isset($input["\163\157\x72\x74\137\142\x79"])) { $sortBy = $input["\x73\x6f\162\x74\x5f\x62\171"]; } $searchableList = $classModel::FIELD_SEARCHABLE; $tableJoinList = array(); $filterList = array(); $params = array(); foreach ($classModel::FIELD_LIST as $list) { $selectableList[] = $classModel::TABLE . "\56" . $list; } foreach ($classModel::FIELD_FILTERABLE as $filter => $operator) { if (!is_blank($input, $filter)) { $cekTypeInput = json_decode($input[$filter], true); if (!is_array($cekTypeInput)) { $filterList[] = "\40\x41\116\x44\x20" . $classModel::TABLE . "\x2e" . $filter . "\x20" . $operator["\157\x70\x65\x72\x61\x74\157\x72"] . "\x20\72{$filter}"; $params[$filter] = $input[$filter]; } else { $input[$filter] = json_decode($input[$filter], true); if ($input[$filter]["\157\160\x65\x72\141\164\157\x72"] == "\x62\x65\x74\x77\x65\x65\x6e") { $filterList[] = "\40\101\116\x44\x20" . $classModel::TABLE . "\56" . $filter . "\40" . $input[$filter]["\157\160\x65\x72\141\164\157\162"] . "\40\47" . $input[$filter]["\x76\x61\154\x75\x65"][0] . "\47\x20\101\116\104\40\x27" . $input[$filter]["\166\141\154\165\x65"][1] . "\x27"; } else { if ($input[$filter]["\x6f\x70\145\x72\x61\164\x6f\x72"] == "\x69\x6e") { $inValues = "\47" . implode("\x27\x2c\x27", $input[$filter]["\x76\141\154\165\145"]) . "\x27"; $filterList[] = "\40\x41\116\x44\40" . $classModel::TABLE . "\56" . $filter . "\x20\x69\x6e\x20\x28" . $inValues . "\51"; } else { $filterList[] = "\40\101\116\x44\40" . $classModel::TABLE . "\x2e" . $filter . "\x20" . $input[$filter]["\157\160\x65\x72\141\x74\x6f\x72"] . "\40\72{$filter}"; $params[$filter] = $input[$filter]; } } } } } $i = 0; foreach ($classModel::FIELD_RELATION as $key => $relation) { $alias = $relation["\x61\154\x69\141\x73\x54\141\x62\x6c\145"]; $fieldDisplayed = "\x43\117\x4e\103\x41\124\137\127\123\40\50\47\x20\55\40\x27\x2c"; $searchableRealtionField = "\103\117\116\103\101\x54\137\127\x53\x20\50\47\x20\x2d\40\47\x2c"; foreach ($relation["\x73\x65\x6c\145\x63\x74\106\151\145\x6c\144\163"] as $keyField) { $fieldDisplayed .= $alias . "\x2e" . $keyField . "\54"; $searchableRealtionField .= $alias . "\56" . $keyField . "\54"; } $fieldDisplayed = substr($fieldDisplayed, 0, strlen($fieldDisplayed) - 1); $fieldDisplayed .= "\x29\40\101\x53\x20" . $relation["\x64\x69\x73\160\x6c\x61\x79\x4e\x61\x6d\145"]; $selectableList[] = $fieldDisplayed; $searchableRealtionField = substr($searchableRealtionField, 0, strlen($searchableRealtionField) - 1); $searchableRealtionField .= "\x29"; $tableJoinList[] = "\114\105\106\x54\40\112\117\111\116\40" . $relation["\154\151\x6e\153\124\x61\x62\154\145"] . "\40" . $alias . "\40\x4f\x4e\x20" . $classModel::TABLE . "\56" . $key . "\40\75\x20" . $alias . "\56" . $relation["\x6c\x69\156\153\106\151\145\x6c\x64"]; $i++; $searchableList[] = $searchableRealtionField; } if (!empty($classModel::CUSTOM_SELECT)) { $selectableList[] = $classModel::CUSTOM_SELECT; } $condition = "\x20\127\110\105\x52\105\40\x74\x72\165\x65"; if (!empty($classModel::CUSTOM_LIST_FILTER)) { foreach ($classModel::CUSTOM_LIST_FILTER as $customListFilter) { $condition .= "\40\101\x4e\x44\x20" . $customListFilter; } } if (!is_blank($input, "\x73\145\x61\x72\143\x68")) { $searchableList = array_map(function ($item) use($classModel) { if (in_array($item, $classModel::FIELD_SEARCHABLE)) { return $classModel::TABLE . "\x2e" . $item . "\x20\x49\x4c\111\x4b\105\x20\x3a\x73\145\x61\x72\143\150"; } else { return $item . "\x20\111\x4c\x49\113\105\40\72\x73\145\x61\x72\x63\150"; } }, $searchableList); } else { $searchableList = array(); } if (count($searchableList) > 0 && !is_blank($input, "\163\x65\x61\162\143\x68")) { $params["\x73\145\x61\x72\x63\150"] = "\x25" . strtoupper($input["\163\145\141\162\143\150"] ?? '') . "\45"; } $limit = $input["\154\151\155\151\x74"] ?? 10; $offset = $input["\157\146\x66\x73\x65\x74"] ?? 0; if (!is_null($input["\160\141\147\145"] ?? null)) { $offset = $limit * ($input["\160\141\147\145"] - 1); } $userId = Auth::user()->id; $roleId = Auth::user()->role_id; $userRoleGroupData = DB::selectOne("\123\x45\114\x45\103\124\40\x42\56\x72\x6f\x6c\145\137\156\x61\x6d\145\x2c\x20\103\x2e\151\144\40\106\122\117\x4d\40\165\x73\145\x72\163\x20\101\x20\xa\40\40\40\40\x20\x20\x20\x20\x4a\x4f\x49\116\x20\162\x6f\154\145\x73\40\x42\40\x4f\116\40\x41\x2e\162\157\x6c\145\137\x69\x64\40\x3d\40\x42\56\x69\x64\xa\x20\40\40\40\40\40\40\x20\112\117\x49\x4e\40\162\157\154\145\137\x67\162\x6f\x75\x70\x73\x20\x43\40\x4f\116\x20\102\x2e\162\157\x6c\x65\x5f\x67\x72\157\165\160\137\151\144\40\75\40\x43\56\151\144\12\x20\x20\x20\40\40\x20\x20\x20\127\110\x45\122\105\x20\x41\56\151\x64\40\75\40\x3a\165\x73\x65\x72\137\151\144", array("\165\163\145\162\x5f\151\144" => $userId)); $roleGroupId = 0; if (!is_null($userRoleGroupData)) { $roleGroupId = $userRoleGroupData->id; } if ($roleGroupId >= 30 and $classModel::TABLE == "\144\x69\x76\x69\163\x69\157\156\x73") { $tableJoinList[] = "\112\x4f\111\116\x20\x6d\141\x70\x70\x69\156\x67\137\165\x73\x65\x72\163\x5f\x64\x69\x76\x69\x73\x69\x6f\156\x73\x20\x4d\x55\104\40\117\x4e\x20" . $classModel::TABLE . "\56\x69\144\40\75\40\x4d\125\x44\56\x64\x69\166\151\x73\x69\x6f\156\x5f\151\x64"; $condition .= "\40\101\116\x44\40\115\x55\x44\56\165\x73\x65\x72\x5f\x69\144\x20\x3d\40" . $userId . "\x20\101\116\104\40\115\x55\104\56\141\x63\x74\x69\166\145\x20\x3d\40\x31"; } if ($roleGroupId >= 30 and in_array("\x64\x69\166\x69\163\151\157\x6e\137\x69\144", $classModel::FIELD_LIST)) { $tableJoinList[] = "\x4a\117\111\x4e\40\x6d\141\x70\x70\x69\x6e\147\x5f\x75\x73\x65\162\x73\137\144\x69\x76\151\x73\151\x6f\x6e\x73\40\115\x55\104\40\117\116\x20" . $classModel::TABLE . "\56\x64\151\166\151\163\x69\x6f\156\x5f\151\x64\40\x3d\x20\115\125\x44\x2e\x64\x69\x76\151\163\151\157\x6e\x5f\x69\x64"; $condition .= "\x20\101\116\x44\40\x4d\125\x44\x2e\x75\x73\145\162\x5f\x69\x64\x20\75\40" . $userId . "\x20\x41\x4e\104\40\115\x55\x44\x2e\141\x63\x74\x69\166\145\x20\x3d\40\61"; } $sql = "\x53\105\114\x45\x43\124\40" . implode("\54\x20", $selectableList) . "\40\x46\122\117\115\40" . $classModel::TABLE . "\40" . implode("\40", $tableJoinList) . $condition . (count($searchableList) > 0 ? "\40\101\116\104\x20\50" . implode("\x20\x4f\122\40", $searchableList) . "\51" : '') . implode("\xa", $filterList) . "\40\x4f\122\104\x45\122\x20\x42\x59\40" . $sortBy . "\40" . $sort . "\40\114\x49\115\x49\124\x20{$limit}\40\x4f\x46\x46\123\105\x54\40{$offset}\x20"; $sqlForCount = "\x53\105\x4c\105\x43\124\x20\x43\117\x55\116\x54\50\61\x29\40\101\123\40\x74\157\x74\141\154\40\106\122\x4f\x4d\x20" . $classModel::TABLE . "\40" . implode("\x20", $tableJoinList) . $condition . (count($searchableList) > 0 ? "\x20\x41\116\104\40\50" . implode("\x20\117\122\40", $searchableList) . "\x29" : '') . implode("\xa", $filterList); $object = DB::select($sql, $params); foreach ($classModel::FIELD_ARRAY as $item) { } $fieldCasting = $classModel::FIELD_CASTING; array_map(function ($key) use($classModel, $classModelName, $fieldCasting) { foreach ($key as $field => $value) { if (isset($fieldCasting[$field])) { if (array_key_exists($field, $fieldCasting)) { if ($fieldCasting[$field] == "\146\154\x6f\141\164") { $key->{$field} = (double) $key->{$field}; } } } $key->class_model_name = $classModelName; if ((preg_match("\x2f\x66\x69\x6c\x65\x5f\x2f\151", $field) or preg_match("\x2f\x69\155\147\x5f\x2f\151", $field)) and !is_null($key->{$field})) { $key->{$field} = columnValueToFileObject($field, $key->{$field}, $classModel::TABLE, $key->id); } if (preg_match("\57\141\162\162\141\171\x5f\x2f\x69", $field)) { $key->{$field} = unserialize($key->{$field}); if (!$key->{$field}) { $key->{$field} = null; } } if (preg_match("\x2f\x6a\163\x6f\156\x5f\57\x69", $field)) { $key->{$field} = json_decode($key->{$field}); if (!$key->{$field}) { $key->{$field} = null; } } } return $key; }, $object); array_map(function ($key) use($classModel, $classModelName) { foreach ($key as $field => $value) { if (property_exists($key, "\x63\162\x65\x61\x74\145\144\137\x62\171")) { $url = URL::to("\x61\x70\x69\x2f\146\x69\154\x65\57\165\163\145\162\163\57\151\155\x67\x5f\x70\x68\x6f\x74\x6f\137\165\x73\x65\162\57" . $key->created_by . "\57" . time()); $tumbnailUrl = URL::to("\x61\x70\x69\57\164\165\x6d\x62\x2d\x66\151\154\145\57\165\163\145\162\x73\x2f\151\155\x67\x5f\x70\150\157\164\x6f\x5f\165\x73\145\162\x2f" . $key->created_by . "\57" . time()); $key->img_photo_created_by = (object) array("\x75\162\154" => $url, "\164\165\155\x62\x6e\x61\x69\154\137\165\162\x6c" => $tumbnailUrl); } } return $key; }, $object); $total = DB::selectOne($sqlForCount, $params)->total; $totalPage = ceil($total / $limit); return array("\144\141\x74\141" => $object, "\x74\157\164\141\154" => $total, "\164\157\164\x61\154\120\x61\x67\145" => $totalPage); } protected function validation() { return array(); } }