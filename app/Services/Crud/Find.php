<?php
 namespace App\Services\Crud; use App\CoreService\CallService; use App\CoreService\CoreException; use App\CoreService\CoreService; use Illuminate\Support\Facades\Auth; use Illuminate\Support\Facades\DB; use Illuminate\Support\Facades\URL; use Illuminate\Support\Str; class Find extends CoreService { public $transaction = false; public $task = null; public function prepare($input) { $model = str_replace("\x5f", "\x2d", $input["\155\x6f\144\145\154"]); $classModel = "\x5c\x41\160\160\x5c\x4d\x6f\144\x65\154\x73\x5c" . Str::ucfirst(Str::camel($model)); if (!class_exists($classModel)) { throw new CoreException(__("\155\x65\163\x73\141\x67\x65\x2e\155\x6f\x64\145\154\64\x30\64", array("\155\x6f\144\145\154" => $model)), 404); } if (!$classModel::IS_LIST) { throw new CoreException("\x4e\157\x74\x20\146\157\x75\x6e\144", 404); } if (!hasPermission("\163\150\157\167\x2d" . $model)) { throw new CoreException(__("\x6d\x65\x73\163\x61\x67\x65\x2e\x34\60\x33"), 403); } $input["\143\x6c\x61\163\163\137\x6d\x6f\144\x65\x6c"] = $classModel; return $input; } public function process($input, $originalInput) { $classModel = $input["\143\154\x61\163\x73\137\155\x6f\x64\x65\154"]; $selectableList = array(); $tableJoinList = array(); $params = array("\x69\x64" => $input["\x69\144"]); foreach ($classModel::FIELD_VIEW as $list) { $selectableList[] = $classModel::TABLE . "\56" . $list; } $i = 0; foreach ($classModel::FIELD_RELATION as $key => $relation) { $alias = toAlpha($i + 1); $fieldDisplayed = "\x43\x4f\x4e\x43\101\x54\x5f\127\x53\40\x28\x27\40\x2d\40\47\x2c"; foreach ($relation["\163\x65\154\145\143\x74\x46\151\x65\154\144\x73"] as $keyField) { $fieldDisplayed .= $alias . "\x2e" . $keyField . "\x2c"; } $fieldDisplayed = substr($fieldDisplayed, 0, strlen($fieldDisplayed) - 1); $fieldDisplayed .= "\51\x20\101\123\40" . $relation["\x64\151\x73\x70\154\x61\x79\x4e\x61\155\145"]; $selectableList[] = $fieldDisplayed; $tableJoinList[] = "\114\105\x46\x54\x20\112\x4f\x49\116\40" . $relation["\x6c\x69\x6e\153\x54\141\x62\x6c\x65"] . "\40" . $alias . "\x20\x4f\x4e\x20" . $classModel::TABLE . "\x2e" . $key . "\x20\x3d\40" . $alias . "\56" . $relation["\x6c\x69\156\x6b\x46\x69\x65\154\x64"]; $i++; } if (!empty($classModel::CUSTOM_SELECT)) { $selectableList[] = $classModel::CUSTOM_SELECT; } $condition = "\x20\127\x48\105\122\x45\x20" . $classModel::TABLE . "\x2e\x69\x64\x20\x3d\x20\x3a\151\144"; $sql = "\x53\105\114\105\x43\124\40" . implode("\x2c\x20", $selectableList) . "\40\106\x52\x4f\115\40" . $classModel::TABLE . "\40" . implode("\40", $tableJoinList) . $condition; $object = DB::selectOne($sql, $params); if (is_null($object)) { throw new CoreException(__("\x6d\x65\x73\163\x61\147\x65\x2e\144\141\164\141\x4e\157\x74\x46\157\165\x6e\x64", array("\151\x64" => $input["\151\144"]))); } $fieldCasting = $classModel::FIELD_CASTING; if (!empty($fieldCasting)) { foreach ($fieldCasting as $item => $k) { if (isset($fieldCasting[$item])) { if (array_key_exists($item, $fieldCasting)) { if ($fieldCasting[$item] == "\x66\154\157\141\164") { $object->{$item} = (double) $object->{$item}; } } } } } if (!empty($classModel::FIELD_UPLOAD)) { foreach ($classModel::FIELD_UPLOAD as $item) { if ((preg_match("\57\146\x69\x6c\145\x5f\57\151", $item) or preg_match("\x2f\151\155\147\137\57\151", $item)) and !is_null($object->{$item})) { $url = URL::to("\x61\160\x69\57\x66\x69\154\x65\x2f" . $classModel::TABLE . "\x2f" . $item . "\x2f" . $object->id . "\x2f" . time()); $tumbnailUrl = URL::to("\x61\x70\151\57\x74\165\x6d\142\55\146\x69\x6c\x65\x2f" . $classModel::TABLE . "\57" . $item . "\57" . $object->id . "\x2f" . time()); $ext = pathinfo($object->{$item}, PATHINFO_EXTENSION); $filename = pathinfo(storage_path($object->{$item}), PATHINFO_BASENAME); $object->{$item} = (object) array("\x65\170\x74" => is_null($object->{$item}) ? null : $ext, "\x75\x72\154" => $url, "\x74\x75\155\142\x6e\141\x69\x6c\x5f\x75\162\x6c" => $tumbnailUrl, "\146\x69\154\145\x6e\141\x6d\x65" => is_null($object->{$item}) ? null : $filename, "\x66\151\145\154\144\137\x76\x61\x6c\165\145" => $object->{$item}); } if (preg_match("\57\141\162\162\x61\x79\x5f\57\x69", $item)) { $key->{$item} = unserialize($key->{$item}); if (!$key->{$item}) { $key->{$item} = null; } } } } if (property_exists($object, "\x63\x72\145\141\x74\145\x64\137\x62\x79")) { $url = URL::to("\141\160\x69\x2f\x66\151\x6c\145\57\x75\x73\x65\162\x73\57\x69\155\147\137\x70\x68\157\x74\157\x5f\x75\163\145\162\57" . $object->created_by . "\57" . time()); $tumbnailUrl = URL::to("\141\160\x69\x2f\164\x75\x6d\x62\x2d\146\x69\154\145\57\x75\163\x65\162\x73\x2f\151\x6d\x67\x5f\160\150\157\164\x6f\137\x75\163\x65\162\57" . $object->created_by . "\x2f" . time()); $object->img_photo_created_by = (object) array("\165\x72\x6c" => $url, "\x74\x75\155\142\156\141\151\154\x5f\x75\162\x6c" => $tumbnailUrl); } if (property_exists($object, "\152\163\x6f\x6e\137\144\141\164\x61")) { $object->json_data = json_decode($object->json_data); } foreach ($classModel::CHILD_TABLE as $keyItem => $valItem) { $childModuleName = "\x63\150\x69\x6c\144\137\x64\141\164\141\x5f" . $keyItem; $foreignFieldName = $valItem["\x66\x6f\x72\145\x69\147\x6e\106\151\x65\x6c\x64"]; $childItem["\x6d\157\144\x65\x6c"] = $keyItem; $childItem[$foreignFieldName] = $object->id; $object->{$childModuleName} = CallService::run("\104\141\x74\141\163\x65\x74", $childItem)->original["\144\x61\x74\141"]; } return array("\x64\141\164\141" => $object); } protected function validation() { return array(); } }