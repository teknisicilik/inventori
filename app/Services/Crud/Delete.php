<?php
 namespace App\Services\Crud; use App\CoreService\CoreException; use App\CoreService\CoreService; use Illuminate\Database\QueryException; use Illuminate\Support\Facades\Auth; use Illuminate\Support\Facades\DB; use Illuminate\Support\Facades\Storage; use Illuminate\Support\Facades\Validator; use Illuminate\Support\Str; class Delete extends CoreService { public $transaction = true; public $task = null; public function prepare($input) { $model = str_replace("\x5f", "\x2d", $input["\x6d\x6f\x64\x65\154"]); $classModel = "\x5c\x41\x70\160\134\115\157\x64\145\154\163\134" . Str::ucfirst(Str::camel($model)); if (!class_exists($classModel)) { throw new CoreException(__("\x6d\145\x73\x73\141\147\145\56\155\157\144\145\154\x34\60\64", array("\155\157\x64\x65\154" => $model)), 404); } if (!$classModel::IS_DELETE) { throw new CoreException("\x4e\157\x74\x20\146\x6f\x75\x6e\144", 404); } if (!hasPermission("\x64\145\154\x65\x74\145\x2d" . $model)) { throw new CoreException("\106\x6f\162\142\x69\x64\x64\x65\156", 403); } $input["\143\154\x61\x73\163\x5f\x6d\x6f\x64\x65\x6c"] = $classModel; return $input; } public function process($input, $originalInput) { $classModel = $input["\x63\x6c\x61\163\163\x5f\x6d\157\144\145\154"]; $object = $classModel::find($input["\x69\144"]); if (!$object) { throw new CoreException(__("\x6d\145\x73\163\141\x67\x65\x2e\x64\141\164\141\x4e\x6f\164\106\x6f\165\156\x64", array("\x69\x64" => $input["\151\x64"]))); } $rules = array("\x69\x64" => "\162\x65\161\165\151\162\x65\x64\x7c\x69\x6e\x74\x65\147\145\162"); $validator = Validator::make($input, $rules); if ($validator->fails()) { throw new CoreException($validator->errors()->first()); } try { foreach ($classModel::FIELD_UPLOAD as $item) { $path = $object->{$item}; Storage::delete($path); } $object->delete(); } catch (QueryException $ex) { throw new CoreException(__("\155\145\163\163\x61\147\x65\x2e\146\157\162\x62\x69\144\144\x65\x6e\x44\x65\x6c\145\164\x65")); } $classModel::afterDelete($object, $input); return array("\144\x61\164\x61" => $object, "\x6d\145\163\163\141\147\x65" => __("\155\x65\163\x73\x61\x67\145\56\163\165\143\x63\x65\x73\163\146\x75\x6c\x6c\171\104\145\154\x65\164\x65")); } protected function validation() { return array(); } }